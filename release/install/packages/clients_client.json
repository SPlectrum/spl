{
  "headers": {
    "spl": {
      "package": {
        "name": "clients_client.json"
      }
    }
  },
  "value": {
    "/client/commands/command.json": "{\r\n    \"headers\": {\r\n        \"spl\": {\r\n            \"command\": {  \"parser\": { \"dir\": \"commands\", \"file\": \"parser.json\" } }\r\n        }\r\n    },\r\n    \"value\": {\r\n        \"UUID\": \"\", \r\n        \"commandString\": \"\"\r\n    }\r\n}",
    "/client/commands/parser.json": "{\n    \"headers\": {},\n    \"value\": { \n        \"\": [ \n            { \"name\": \"help\", \"alias\": \"h\" }, \n            { \"name\": \"test\", \"alias\": \"t\", \"type\": \"Boolean\" }, \n            { \"name\": \"steps\", \"alias\": \"s\" } ],\n        \"spl/blob/copy\": [ \n            { \"name\": \"from\", \"alias\": \"f\" }, \n            { \"name\": \"to\", \"alias\": \"t\" } ],\n        \"spl/blob/delete\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/blob/get\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/blob/move\": [ \n            { \"name\": \"from\", \"alias\": \"f\" }, \n            { \"name\": \"to\", \"alias\": \"t\" } ],\n        \"spl/blob/put\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" }, \n            { \"name\": \"contents\", \"alias\": \"c\", \"defaultOption\": true, \"type\":\"String\" } ],\n        \"spl/console/error\": [ \n            { \"name\": \"message\", \"alias\": \"m\", \"multiple\": true, \"defaultOption\": true } ],\n        \"spl/console/log\": [ \n            { \"name\": \"message\", \"alias\": \"m\", \"multiple\": true, \"defaultOption\": true } ],\n        \"spl/console/trace\": [ \n            { \"name\": \"message\", \"alias\": \"m\", \"multiple\": true, \"defaultOption\": true } ],\n        \"spl/console/warn\": [ \n            { \"name\": \"message\", \"alias\": \"m\", \"multiple\": true, \"defaultOption\": true } ],\n        \"spl/data/queue\": [],\n        \"spl/data/read\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/data/write\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" }, \n            { \"name\": \"contents\", \"alias\": \"c\", \"defaultOption\": true, \"type\":\"String\" } ],\n        \"spl/package/create\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/package/deploy\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/package/load\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/package/remove\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ],\n        \"spl/package/save\": [ \n            { \"name\": \"repo\", \"alias\": \"r\" }, \n            { \"name\": \"dir\", \"alias\": \"d\" }, \n            { \"name\": \"file\", \"alias\": \"f\" }, \n            { \"name\": \"path\", \"alias\": \"p\", \"multiple\": true }, \n            { \"name\": \"uri\", \"alias\": \"u\" } ]\n    }\n}",
    "/client/commands/requests/": {},
    "/client/commands/responses/": {},
    "/client/spl": "node spl.js $@\r\n",
    "/client/spl.cmd": "node spl.js %*\r\n",
    "/client/spl.js": "const spl = require(\"../../modules/spl/spl.js\");\r\n\r\n// Set SPlectrum and client root directory, extract command string\r\nvar root = process.cwd().split(\"/\");\r\nif (root.length === 1 ) root = root[0].split(`\\\\`);\r\nconst splRoot = root.slice(0,root.length-2).join(\"/\");\r\nconst session = root[root.length-1];\r\nconst clientRoot = root.slice(root.length - 2).join(\"/\")\r\nconst commandString = process.argv.slice(2);\r\n\r\nvar command = {\r\n    headers: { \r\n        spl: { \r\n            execute: { cwd: splRoot, session: session, modules: \"../modules\", TTL: 100 }, \r\n            request: { action: \"spl/command/execute\" },\r\n            command: { set: { UUID: spl.generateUUID(), cwd: clientRoot, commandString: commandString } }\r\n        } \r\n    },\r\n    value: {}\r\n}\r\nconsole.dir(command,{depth:10});\r\nprocess.nextTick ( () => spl.moduleAction( command, \"spl/execute/execute\" ) );\r\n\r\nsetTimeout ( function printComplete () {\r\n    if( command.headers.spl.execute.finishTime ) console.dir(command,{depth:10});\r\n    else { console.log(command.headers.spl.execute.action); setTimeout ( printComplete, 10); }\r\n}, 10);\r\n\r\n"
  }
}